[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "workbench-core"
version = "0.3.0"
description = "Core library for the Workbench project"
authors = ["Jean Dos Santos <jeandsantos88@gmail.com>"]
readme = "README.md"
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
]
packages = [
    { include = "workbench_api", from = "src" },
    { include = "workbench_components", from = "src" },
    { include = "workbench_db", from = "src" },
    { include = "workbench_optimize", from = "src" },
    { include = "workbench_process", from = "src" },
    { include = "workbench_train", from = "src" },
    { include = "workbench_utils", from = "src" },
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
rich = "^13.7.0"
pydantic = "^2.6.1"
pandas = "^2.2.1"
wget = "^3.2"
xlrd = "^2.0.1"
numpy = "^1.26.4"
scikit-learn = ">=1.4,<1.4.2"
feature-engine = "^1.6.2"
matplotlib = "^3.8.3"
seaborn = "^0.13.2"
mlflow = "^2.10.2"
pytest-cov = "^4.1.0"
typer = "^0.9.0"
fastapi = "^0.110.0"
uvicorn = "^0.27.1"
pygad = "^3.3.1"
httpx = "^0.27.0"
anyio = "^4.3.0"
pytest-asyncio = "^0.23.5.post1"
asgi-lifespan = "^2.1.0"
pydantic-settings = "^2.2.1"
python-dotenv = "^1.0.1"
sqlalchemy = "^2.0.28"
sqlmodel = "^0.0.16"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.6.0"
black = "^24.1.1"
flake8 = "^7.0.0"
mypy = "^1.8.0"
pydocstyle = "^6.3.0"
pylint = "^3.0.3"
pytest = "^8.0.0"
ruff = "^0.2.1"
tox = "^4.12.1"
keyring = "^24.3.0"
artifacts-keyring = "^0.3.4"
flake8-pyproject = "^1.2.3"
twine = "^5.0.0"


[tool.poetry.group.debug.dependencies]
ipykernel = "^6.29.2"
jupyter = "^1.0.0"
icecream = "^2.1.3"
matplotlib = "^3.8.3"
seaborn = "^0.13.2"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
use_parentheses = true

[tool.flake8]
max-line-length = 120

[tool.ruff]
line-length = 120
src = ["src", "tests"]

[tool.pylint]
max-line-length = 120
disable = [
    "R0801",
    "missing-module-docstring",
    "missing-function-docstring",
    "missing-class-docstring",
    "too-few-public-methods",
    "useless-parent-delegation",
    "logging-fstring-interpolation",
]
[tool.mypy]
mypy_path = "src"
ignore_missing_imports = false

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --verbose" #  --cov=src --cov-config=pyproject.toml
pythonpath = ["src"]
testpaths = ["tests"]
log_cli = true
log_cli_level = "WARNING"

[tool.pydocstyle]
convention = "google"
match_dir = "src"
add_ignore = [
    "D100",
    "D104",
    "D105",
    "D107",
    "D203",
    "D212",
    "D213",
    "D404",
    "D406",
    "D407",
    "D413",
]

[tool.tox]
legacy_tox_ini = """
[tox]
minversion = 4.12.1
envlist = py311
isolated_build = true

[testenv]
# https://python-poetry.org/docs/faq/#usecase-1
allowlist_externals = poetry
deps =
    [pytest, pytest-cov]
commands =
    poetry run pytest  --verbose --import-mode importlib --cov=src --cov-config=pyproject.toml tests
"""

[tool.coverage.run]
branch = true
source = [
    "workbench_api",
    "workbench_components",
    "workbench_db",
    "workbench_optimize",
    "workbench_process",
    "workbench_train",
    "workbench_utils",
]

[tool.coverage.paths]
source = ["src", ".tox/*/site-packages"]
